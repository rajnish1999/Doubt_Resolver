<%- include('partials/header.ejs') %>
<div class="outerMostDiv">
    <div class="askQuesDiv">
        <h1 class="heading_question">Ask your doubt!!</h1>
        <form method="POST" action="/addQuestion" class="question_form">
            <textarea name="qt" type="text" id="quesInput" ></textarea>
            <button class="ques_button" type="submit">Add Question</button>
        </form>
    </div>
    
    <% for(let i=0;i< questionArr.length;i++) { %>
        <div class="outerDivForQuestions">
            <div class="divShowingQuestion">
                <h1><%= questionArr[i].description %></h1>
                <div class="questionOptions">
                    <div class="upAndDownVote">
                        <div class="divForUp">
                            <button  class="buttonForUp" onClick="questionUpFunc('<%= questionArr[i]._id %>')"><i id="iqu-<%=questionArr[i]._id%>" class="<%= questionArr[i].isUpVote ? 'fad' : 'fal' %> fa-thumbs-up fa-2x"></i></button>
                            <div id='qu-<%= questionArr[i]._id %>' class="countUp"><%= questionArr[i].upVote.length <= 0 ? '' : questionArr[i].upVote.length %></div>
                        </div>
                        <div class="divForDown">                        
                            <button class="buttonForDown" onClick="questionDownFunc('<%= questionArr[i]._id %>')"><i id="iqd-<%=questionArr[i]._id%>" class="<%= questionArr[i].isDownVote ? 'fad' : 'fal' %> fa-thumbs-down fa-2x"></i></button>
                            <div id='qd-<%= questionArr[i]._id %>' class="countDown"><%= questionArr[i].downVote.length <= 0 ? '' : questionArr[i].downVote.length %></div>
                        </div>
                    </div>
                    <button id="answerToggle-<%= i %>" onClick="toggleAnswer('<%= i %>')">Answers</button>
                </div>
            </div>
            
            <form method="POST" action="/addAnswer" class="divToWriteAns">
                <textarea name="ans" type="text" class="ansInput" rows="1" placeholder="Add an answer..."></textarea>
                <button  class="ans_button" type="submit">Add Answer</button>
                <input type="hidden" name="question" value="<%= questionArr[i]._id %>" />
            </form>

            <div class="seeAllAns" id="seeAllAns-<%= i %>" style="display:none">
                
                <% for(let j=0;j< answerArr.length;j++) { %>
                    <% if(answerArr[j].question.toString() === questionArr[i]._id.toString()) {%>   
                        <div class="divShowingAnswer">
                            <div class="userInfo">
                                <div class="userDP">
                                    <img src="http://localhost:5000/profile/avatar/<%= answerArr[j].creator._id %>" alt="" class="userImage">
                                </div>
                                <div class="nameAndDate">
                                    <div class="userNameAnswer"><%= answerArr[j].creator.username %></div>
                                    <div class="userDateAnswer">
                                        <%= answerArr[j].dateAndTime%>
                                    </div>
                                </div>
                            </div>
                            <h2><%= answerArr[j].answerText %></h2>
                            <div class="answerOptions">
                                <div class="upAndDownVote">
                                    <div class="divForUp">
                                        <button class="buttonForUp" onClick="answerUpFunc('<%= answerArr[j]._id %>')"><i id="iau-<%=answerArr[j]._id%>" class="<%= answerArr[j].isUpVote ? 'fad' : 'fal' %> fa-thumbs-up fa-2x"></i></button>
                                        <div id='au-<%= answerArr[j]._id %>' class="countUp"><%= answerArr[j].upVote.length > 0 ? answerArr[j].upVote.length : '' %></div>
                                    </div>
                                    <div class="divForDown">                        
                                        <button class="buttonForDown" onClick="answerDownFunc('<%= answerArr[j]._id %>')"><i id="iad-<%=answerArr[j]._id%>" class="<%= answerArr[j].isDownVote ? 'fad' : 'fal' %> fa-thumbs-down fa-2x"></i></button>
                                        <div id='ad-<%= answerArr[j]._id %>' class="countDown"><%= answerArr[j].downVote.length > 0 ? answerArr[j].downVote.length : '' %></div>
                                    </div>
                                </div>
                                <button id="commentToggle-<%= j %>" onClick="toggleComment('<%= j %>')">Comments</button>
                            </div>
                        </div>

                        <form method="POST" action="/addComment" class="divToWriteComment">
                            <textarea name="comment" type="text" class="commentInput" rows="1" placeholder="Add a comment..."></textarea>
                            <button  class="comment_button" type="submit">Add Comment</button>
                            <input type="hidden" name="question" value="<%= questionArr[i]._id %>" />
                            <input type="hidden" name="answer" value="<%= answerArr[j]._id %>" />
                        </form>
                        <div id="seeAllComment-<%= j %>" style="display:none">
                
                            <% for(let k=0;k< commentArr.length;k++) { %>
                                <% if(typeof commentArr[k].answer != 'undefined' && commentArr[k].answer.toString() === answerArr[j]._id.toString()) {%>   
                                    <div class="divShowingComment" id="<%= commentArr[k]._id %>">
                                        <div class="userInfo">
                                            <div class="userDP">
                                                <img src="http://localhost:5000/profile/avatar/<%= commentArr[k].creator._id %>" alt="" class="userImageComment">
                                            </div>
                                            <div class="nameAndDate">
                                                <div class="userNameComment"><%= answerArr[j].creator.username %></div>
                                                <div class="userDateComment"><%= commentArr[k].dateAndTime%></div>
                                            </div>
                                        </div>
                                        <h2><%= commentArr[k].commentText %></h2>
                                        <div class="commentOptions">
                                            <div class="upAndDownVote">
                                                <div class="divForUp">
                                                    <button class="buttonForUp" onClick="commentUpFunc('<%= commentArr[k]._id %>')"><i id="icu-<%=commentArr[k]._id%>" class="<%= commentArr[k].isUpVote ? 'fad' : 'fal' %> fa-thumbs-up fa-2x"></i></button>
                                                    <div id='cu-<%= commentArr[k]._id %>' class="countUp"><%= commentArr[k].upVote.length > 0 ? commentArr[k].upVote.length : '' %></div>
                                                </div>
                                                <div class="divForDown">                        
                                                    <button class="buttonForDown" onClick="commentDownFunc('<%= commentArr[k]._id %>')"><i id="icd-<%=commentArr[k]._id%>" class="<%= commentArr[k].isDownVote ? 'fad' : 'fal' %> fa-thumbs-down fa-2x"></i></button>
                                                    <div id='cd-<%= commentArr[k]._id %>' class="countDown"><%= commentArr[k].downVote.length > 0 ? commentArr[k].downVote.length : '' %></div>
                                                </div>
                                                <button 
                                                    onClick="toggleAddSubComment('<%= commentArr[k]._id %>')"
                                                    >
                                                    <i class="fal fa-reply fa-2x"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <form method="POST" action="/addComment" id="nestedCom-<%= commentArr[k]._id %>"  class="divToWriteSubComment">
                                            <textarea name="comment" type="text" class="commentInput" rows="1" placeholder="Add a comment..."></textarea>
                                            <button  class="comment_button" type="submit">Add Comment</button>
                                            <input type="hidden" name="parent" value="<%= answerArr[j]._id %>" />
                                        </form>
                                    </div>
                                <% } %>
                            <% } %>
                            
                        </div>
                    <% } %>
                <% } %>
                
            </div>
        </div>
    <% } %>
</div>

<script>

    const questionUpFunc = async (id) => {
        let temp = document.getElementById(`qu-${id}`);
        let temp1 = document.getElementById(`qd-${id}`);
        let iconThumbsUp = document.getElementById(`iqu-${id}`)
        let iconThumbsDown = document.getElementById(`iqd-${id}`)

        try {
                let data = {
                    id
                }
                let response = await fetch('/question/upVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            iconThumbsUp.classList.toggle('fal');
            iconThumbsUp.classList.toggle('fad');
            temp.innerHTML = result.upVote;

            if(result.downVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.downVote;
            }
            
            if(result.isSame){
                iconThumbsDown.classList.toggle('fad');
                iconThumbsDown.classList.toggle('fal'); 
            }
            
            console.log(result)
        }catch (err) {
            throw err;
        }
    }

    const questionDownFunc = async (id) => {
        let temp = document.getElementById(`qd-${id}`);
        let temp1 = document.getElementById(`qu-${id}`);
        let iconThumbsUp = document.getElementById(`iqu-${id}`)
        let iconThumbsDown = document.getElementById(`iqd-${id}`)
        // console.log(typeof temp.innerHTML);
        try {
                let data = {
                    id
                }
                let response = await fetch('/question/downVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            iconThumbsDown.classList.toggle('fal');
            iconThumbsDown.classList.toggle('fad');
            temp.innerHTML = result.downVote;
            if(result.upVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.upVote;
            }
            if(result.isSame){
                iconThumbsUp.classList.toggle('fad');
                iconThumbsUp.classList.toggle('fal'); 
            }
        }catch (err) {
            throw err;
        }
    }

    const answerUpFunc = async (id) => {
        let temp = document.getElementById(`au-${id}`);
        let temp1 = document.getElementById(`ad-${id}`);
        let iconThumbsUp = document.getElementById(`iau-${id}`)
        let iconThumbsDown = document.getElementById(`iad-${id}`)
        console.log(typeof temp.innerHTML);
        try {
                let data = {
                    id
                }
                let response = await fetch('/answer/upVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            iconThumbsUp.classList.toggle('fal');
            iconThumbsUp.classList.toggle('fad');
            temp.innerHTML = result.upVote;
            if(result.downVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.downVote;
            }
            if(result.isSame){
                iconThumbsDown.classList.toggle('fad');
                iconThumbsDown.classList.toggle('fal'); 
            }
        }catch (err) {
            throw err;
        }
    }

    const answerDownFunc = async (id) => {
        let temp = document.getElementById(`ad-${id}`);
        let temp1 = document.getElementById(`au-${id}`);
        let iconThumbsUp = document.getElementById(`iau-${id}`)
        let iconThumbsDown = document.getElementById(`iad-${id}`)
        console.log(typeof temp.innerHTML);
        try {
                let data = {
                    id
                }
                let response = await fetch('/answer/downVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            iconThumbsDown.classList.toggle('fal');
            iconThumbsDown.classList.toggle('fad');
            temp.innerHTML = result.downVote;
            if(result.upVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.upVote;
            }
            if(result.isSame){
                iconThumbsUp.classList.toggle('fad');
                iconThumbsUp.classList.toggle('fal'); 
            }
        }catch (err) {
            throw err;
        }
    }

    const commentUpFunc = async (id) => {
        let temp = document.getElementById(`cu-${id}`);
        let temp1 = document.getElementById(`cd-${id}`);
        let iconThumbsUp = document.getElementById(`icu-${id}`)
        let iconThumbsDown = document.getElementById(`icd-${id}`)
        console.log(typeof temp.innerHTML);
        try {
                let data = {
                    id
                }
                let response = await fetch('/comment/upVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            iconThumbsUp.classList.toggle('fal');
            iconThumbsUp.classList.toggle('fad');
            temp.innerHTML = result.upVote;
            if(result.downVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.downVote;
            }
            if(result.isSame){
                iconThumbsDown.classList.toggle('fad');
                iconThumbsDown.classList.toggle('fal'); 
            }
        }catch (err) {
            throw err;
        }
    }

    const commentDownFunc = async (id) => {
        let temp = document.getElementById(`cd-${id}`);
        let temp1 = document.getElementById(`cu-${id}`);
        let iconThumbsUp = document.getElementById(`icu-${id}`)
        let iconThumbsDown = document.getElementById(`icd-${id}`)
        
        console.log(typeof temp.innerHTML);
        try {
                let data = {
                    id
                }
                let response = await fetch('/comment/downVote', { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(data)
            })

            let result = await response.json();
            console.log(result)
            iconThumbsDown.classList.toggle('fal');
            iconThumbsDown.classList.toggle('fad');
            temp.innerHTML = result.downVote;
            if(result.upVote == 0){
                temp1.innerHTML = '';
            }else{
                temp1.innerHTML = result.upVote;
            }
            if(result.isSame){
                iconThumbsUp.classList.toggle('fad');
                iconThumbsUp.classList.toggle('fal'); 
            }
        }catch (err) {
            throw err;
        }
    }

    const toggleAnswer = (i) => {
        const ansOfQ = document.getElementById(`seeAllAns-${i}`);

        if(ansOfQ.style.display === 'none'){
            ansOfQ.style.display = 'block'
        }else{
            ansOfQ.style.display = 'none'
        }
    }

    const toggleComment = (j) => {
        const commentOfAns = document.getElementById(`seeAllComment-${j}`);
        
        if(commentOfAns.style.display === 'none'){
            commentOfAns.style.display = 'block'
        }else{
            commentOfAns.style.display = 'none'
        }
    }

   const toggleAddSubComment = (id) => {
       const subComOfCom = document.getElementById(`nestedCom-${id}`);

       if(subComOfCom.style.display == 'none'){
           subComOfCom.style.display = 'flex'
       }else{
           subComOfCom.style.display = 'none'
       }
   }

    
    let tempComment = '<%- JSON.stringify(commentArr) %>'
    // let tempAnswer = '<%- JSON.stringify(commentArr) %>'
    let arrComment = JSON.parse(tempComment);
    let newCommentArr = arrComment.filter((comment) => typeof comment.answer == 'undefined')

    console.log(newCommentArr);

    // let arrAnswer = JSON.parse(tempAnswer);

    const addNestedCom = (obj) => {
        const parsedObj = obj;
        const queue = [];
        queue.push(parsedObj);
        let k = 0;
        while(queue.length > 0) {
            let tempEle = queue.shift();
            if(k > 0){

                let formForSubComment = document.createElement("form");
                let textareaForSubComment = document.createElement("textarea");
                let submitForSubComment = document.createElement("button");
                let inputForParentSubComment = document.createElement("input");

                formForSubComment.appendChild(textareaForSubComment);
                formForSubComment.appendChild(submitForSubComment);
                formForSubComment.appendChild(inputForParentSubComment);
                
                formForSubComment.setAttribute("action", "/addComment");
                formForSubComment.setAttribute("method", "POST");
                formForSubComment.className = "divToWriteSubComment"
                formForSubComment.setAttribute("id",`nestedCom-${tempEle._id}`)
                textareaForSubComment.setAttribute("name", "comment");
                textareaForSubComment.setAttribute("type", "text");
                textareaForSubComment.setAttribute("rows", "1");
                textareaForSubComment.setAttribute("placeholder", "Add a comment...");
                textareaForSubComment.className = "commentInput";
                submitForSubComment.setAttribute("type", "submit");
                submitForSubComment.className = "comment_button"
                submitForSubComment.innerHTML = "Add Comment";
                inputForParentSubComment.setAttribute("type", "hidden");
                inputForParentSubComment.setAttribute("name", "parent");
                inputForParentSubComment.setAttribute("value", `${tempEle._id}`);
                
                // below is the options part
                let outerDivForSubCommentOptions = document.createElement('div');
                let optionsOfSubComponents = document.createElement('div');
                let newOuterDivForUp = document.createElement('div');
                let newOuterDivForDown = document.createElement('div');
                let countDivForUp = document.createElement('div');
                let countDivForDown = document.createElement('div');
                let newButtonForUp = document.createElement('button');
                let newButtonForDown = document.createElement('button');
                let newButtonForReply = document.createElement('button');
                let newIForUp = document.createElement('i');
                let newIForDown = document.createElement('i');
                let newIForReply = document.createElement('i');

                outerDivForSubCommentOptions.appendChild(optionsOfSubComponents);
                optionsOfSubComponents.appendChild(newOuterDivForUp);
                optionsOfSubComponents.appendChild(newOuterDivForDown);
                optionsOfSubComponents.appendChild(newButtonForReply);
                newOuterDivForUp.appendChild(newButtonForUp);
                newOuterDivForUp.appendChild(countDivForUp);
                newOuterDivForDown.appendChild(newButtonForDown);
                newOuterDivForDown.appendChild(countDivForDown);
                newButtonForUp.appendChild(newIForUp);
                newButtonForDown.appendChild(newIForDown);
                newButtonForReply.appendChild(newIForReply);

                outerDivForSubCommentOptions.className = "subCommentOptions"
                optionsOfSubComponents.className = "upAndDownVote";
                newButtonForUp.className = "buttonForUp"
                newButtonForUp.addEventListener("click", function(e){
                    commentUpFunc(`${tempEle._id}`)
                })
                newButtonForDown.className = "buttonForDown";
                newButtonForDown.addEventListener("click", function(e){
                    commentDownFunc(`${tempEle._id}`)
                })
                newButtonForReply.addEventListener('click', function(e) {
                    toggleAddSubComment(`${tempEle._id}`)
                })
                countDivForUp.className = "countUp";
                countDivForUp.setAttribute('id',`cu-${tempEle._id}`)
                countDivForDown.className = "countDown";
                countDivForDown.setAttribute('id',`cd-${tempEle._id}`)
                countDivForUp.innerHTML = tempEle.upVote.length > 0 ? tempEle.upVote.length : '';
                countDivForDown.innerHTML = tempEle.downVote.length > 0 ? tempEle.downVote.length : '';
                newIForUp.setAttribute("id", `icu-${tempEle._id}`)
                newIForDown.setAttribute("id", `icd-${tempEle._id}`)
                newIForUp.className = tempEle.isUpVote ? "fad fa-thumbs-up fa-2x" : "fal fa-thumbs-up fa-2x";
                newIForDown.className = tempEle.isDownVote ? "fad fa-thumbs-up fa-2x" : "fal fa-thumbs-up fa-2x";
                newIForReply.className = "fal fa-reply fa-2x";

                // below is the user info part
                let newOuterDivForUserDetail = document.createElement("div");
                let newDivForUserDP = document.createElement("div");
                let newDivForDateAndName = document.createElement("div");
                let newDivForName = document.createElement("div");
                let newDivForDate = document.createElement("div");
                let imageTagForUser = document.createElement("img");

                newDivForUserDP.appendChild(imageTagForUser);
                newDivForDateAndName.appendChild(newDivForName);
                newDivForDateAndName.appendChild(newDivForDate);
                newOuterDivForUserDetail.appendChild(newDivForUserDP)
                newOuterDivForUserDetail.appendChild(newDivForDateAndName)

                newOuterDivForUserDetail.className = "userInfo";
                newDivForUserDP.className = "userDP";
                newDivForDateAndName.className = "nameAndDate";
                
                newDivForName.className = "userNameComment";
                newDivForDate.className = "userDateComment"
                imageTagForUser.src = `http://localhost:5000/profile/avatar/${tempEle.creator._id}`;
                imageTagForUser.className = "userImageComment";

                newDivForName.innerHTML = `${tempEle.creator.username}`;
                newDivForDate.innerHTML = `${tempEle.dateAndTime}`
                
                //final part, where final div is constructed adding all children together
                let newEle= document.createElement("div")
                let newComEle= document.createElement("div")
                newComEle.innerHTML = tempEle.commentText;
                newComEle.style.cssText="margin: 1em 0;"
                newEle.appendChild(newOuterDivForUserDetail);
                newEle.appendChild(newComEle);
                newEle.appendChild(outerDivForSubCommentOptions);
                newEle.appendChild(formForSubComment);
                newEle.setAttribute("id",`${tempEle._id}`)
                newEle.style.cssText="padding: 1em;border-left: 2px solid #dee0e1;margin-left:1em"
                let parentEle = document.getElementById(`${tempEle.parentComment}`)
                parentEle.appendChild(newEle)
            }
            newCommentArr.forEach((comment) => {
                console.log(comment)
                if(comment.parentComment == tempEle._id){
                    queue.push(comment);
                }
            })
            k++;
        }
    }
    arrComment.forEach((comment) => {
        if(typeof comment.answer != 'undefined'){
            addNestedCom(comment)
        }
    })

</script>

<%- include('partials/footer.ejs') %>
